<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="BookReadMapper">

	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
	<resultMap id="BookReadMap"
		type="pocketLib.spring.pocketLibSpring.mybatis.model.BookRead">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="bRNo" column="bRNo" />
		<result property="userno" column="userno" />
		<result property="isbn" column="isbn" />
		<result property="value" column="value" />
		<result property="reg_date" column="reg_date" />
		<result property="count" column="count" />
		<result property="term" column="term" />
	</resultMap>

	<!-- 단일행 조회를 위한 기능 정의 -->
	<select id="selectItem"
		parameterType="pocketLib.spring.pocketLibSpring.mybatis.model.BookRead"
		resultMap="BookReadMap">
		<!-- "#{변수명}" 으로 표시된 곳에 멤버변수가 치환된다. -->
		select bRNo, userno, isbn, value, reg_date from bookRead where
		bRNo=#{bRNo};
	</select>


	<!-- 유저의 읽은 책 목록 조회 -->
	<select id="selectItembyUserId"
		parameterType="pocketLib.spring.pocketLibSpring.mybatis.model.BookRead"
		resultMap="BookReadMap">
		<!-- "#{변수명}" 으로 표시된 곳에 멤버변수가 치환된다. -->
		select bRNo, userno, isbn, value, reg_date from bookRead where
		userno=#{userno};

	</select>



	<!-- 다중행 조회를 위한 기능 정의 -->
	<select id="selectList"
		parameterType="pocketLib.spring.pocketLibSpring.mybatis.model.BookRead"
		resultMap="BookReadMap">
		<!-- 이 안에서 처리할 SQL문을 명시한다. -->

		select bRNo, userno, isbn, value, reg_date from bookRead;

	</select>

	<!-- 유저가 해당 도서를 읽은책에 등록했는지 여부를 판단하기 위해 -->
	<select id="selectCount"
		parameterType="pocketLib.spring.pocketLibSpring.mybatis.model.BookRead"
		resultType="int">
		<!-- 이 안에서 처리할 SQL문을 명시한다. -->
		select count(*) from bookRead where userno=#{userno} and isbn=#{isbn};

	</select>


	<!-- 기간 별로 (yyyy-MM) 유저의 읽은 책 권 수 COUNT -->
	<select id="selectCountbyReg_date"
		parameterType="pocketLib.spring.pocketLibSpring.mybatis.model.BookRead"
		resultMap="BookReadMap">
		<!-- 이 안에서 처리할 SQL문을 명시한다. -->
		select
		date_format(reg_date, '%Y-%m') as term,
		count(*) as count
		from
		bookread
		where userno=#{userno}
		group by date_format(reg_date, '%Y-%m')

	</select>




	<!-- 데이터 수 조회를 위한 기능 정의 -->
	<select id="AllCount"
		parameterType="pocketLib.spring.pocketLibSpring.mybatis.model.BookRead"
		resultType="int">
		<!-- 이 안에서 처리할 SQL문을 명시한다. -->
		select count(*) from bookRead where userno=#{userno};

	</select>


	<!-- 데이터 저장을 위한 기능 정의 -->
	<insert id="insertItem"
		parameterType="pocketLib.spring.pocketLibSpring.mybatis.model.BookRead"
		useGeneratedKeys="true" keyProperty="bRNo">
		<!-- "#{변수명}" 으로 표시된 곳에 Beans의 멤버변수가 치환된다. -->
		insert into bookRead (userno, isbn, value, reg_date) values (
		#{userno}, #{isbn}, #{value}, #{reg_date});

	</insert>


	<!-- 데이터 삭제를 위한 기능 정의 -->
	<delete id="deleteItem"
		parameterType="pocketLib.spring.pocketLibSpring.mybatis.model.BookRead">
		<!-- 이 안에서 처리할 SQL문을 명시한다. -->
		delete from bookRead where userno=#{userno} and isbn=#{isbn};
	</delete>

	<!-- 데이터 갱신을 위한 기능 정의 -->
	<update id="updateItem"
		parameterType="pocketLib.spring.pocketLibSpring.mybatis.model.BookRead">
		<!-- 이 안에서 처리할 SQL문을 명시한다. -->
		update bookRead set value=#{value} where userno=#{userno} and
		isbn=#{isbn};
	</update>




</mapper>